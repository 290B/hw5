<?xml version="1.0" encoding="UTF-8"?>


			  <!-- git testibg --> 

	
<project name="homework5" default="dist" basedir=".">
	

	  <!-- set global properties for this build -->
  <!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist"  location="dist"/>
	<property name="projectpath" location="/home/tor/git/hw5/hw5/ "/>
	

		
	<property name="host" value="localhost"/>

	<property name="computer1" value="elroy.cs.ucsb.edu" />
	<property name="computer2" value="kenny.cs.ucsb.edu" />
	<property name="computer3" value="dagwood.cs.ucsb.edu" />
	<property name="computer4" value="calvin.cs.ucsb.edu" />

	<property name="computer5" value="brain.cs.ucsb.edu" />
	<property name="computer6" value="tygra.cs.ucsb.edu" />
	<property name="computer7" value="cartman.cs.ucsb.edu" />
	<property name="computer8" value="linus.cs.ucsb.edu" />
	
	<property name="computer9" value="popeye.cs.ucsb.edu" />
	<property name="computer10" value="scooby.cs.ucsb.edu" />
	<property name="computer11" value="whiley.cs.ucsb.edu" />
	<property name="computer12" value="blondie.cs.ucsb.edu" />
		
	<property name="computer13" value="dudley.cs.ucsb.edu" />
	<property name="computer14" value="tick.cs.ucsb.edu" />
	<property name="computer15" value="beavis.cs.ucsb.edu" />
	<property name="computer16" value="bullwinkle.cs.ucsb.edu" />
	
	  <!-- codebase properties --> 
	<property name="file_codebase" location="/cs/student/torgel/public_html/290b/hw4/src/" />
	<property name="web_codebase" value="http://www.cs.ucsb.edu/~torgel/290b/hw4/src/" />
	
  <target name="compile" description="compile the source">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>  
  
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="dist" depends="compile" description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Make system jar file -->
    <jar jarfile="${dist}/system.jar" basedir="${build}" includes="system/** api/**"/>
    
    <!-- Make client jar file -->
    <jar jarfile="${dist}/client.jar" basedir="${build}" includes="client/** api/** tasks/**"/>

  	  <!-- Copy client's task classes to client's codebase --> 
    <mkdir dir="${file_codebase}"/>
    <copy todir="${file_codebase}">
      <fileset dir="${build}"/>
    </copy>
  </target>
  
  <target name="javadoc" description="create javadocs">
  	<javadoc packagenames="tasks.*,api.*" sourcepath="${src}" destdir="documents/javadoc" />
  </target>
  
  <target name="worker" depends="dist" description="Start a worker" >
  	<java classname="system.WorkerImpl" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${host}"/>
  	  <classpath>
  	    <pathelement location="dist/system.jar"/>
  	  </classpath>
  	</java>
  </target>  

	<target name = "8workers" depends="dist" description = "Start 8 Workers">
		
		<input message="enter username:" addproperty="username">
		    <handler classname="org.apache.tools.ant.input.SecureInputHandler" />
		</input>

		
		<input message="enter password:" addproperty="pw">
		    <handler classname="org.apache.tools.ant.input.SecureInputHandler" />
		</input>
		
		<parallel>
		  	  <!-- <sshexec host="${host}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant space"/> --> 
			<sshexec host="${computer1}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
			<sshexec host="${computer2}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
			<sshexec host="${computer3}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
			<sshexec host="${computer4}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
			<sshexec host="${computer1}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
			<sshexec host="${computer2}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
			<sshexec host="${computer3}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
			<sshexec host="${computer4}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>

		</parallel>
	</target>
	
	
	<target name = "16workers" depends="dist" description = "Start 16 Workers on different machines">
			
			<input message="enter username:" addproperty="username">
			    <handler classname="org.apache.tools.ant.input.SecureInputHandler" />
			</input>

			
			<input message="enter password:" addproperty="pw">
			    <handler classname="org.apache.tools.ant.input.SecureInputHandler" />
			</input>
			
			<parallel>
			  	  <!-- <sshexec host="${host}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant space"/> --> 
				<sshexec host="${computer1}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer2}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer3}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer4}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer5}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer6}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer7}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer8}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>				
				<sshexec host="${computer9}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer10}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer11}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer12}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer13}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer14}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer15}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				<sshexec host="${computer16}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant worker"/>
				
			</parallel>
	</target>
	
		<target name = "killRemoteWorkers" depends="dist" description = "kills remote processes in case of SHTF">
			
			<input message="enter username:" addproperty="username">
			    <handler classname="org.apache.tools.ant.input.SecureInputHandler" />
			</input>

			
			<input message="enter password:" addproperty="pw">
			    <handler classname="org.apache.tools.ant.input.SecureInputHandler" />
			</input>
			
			<parallel>
			  	  <!-- <sshexec host="${host}" username="${username}" password="${pw}" trust="true" command="cd ${projectpath}; ant space"/> --> 
				<sshexec host="${computer1}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer2}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer3}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer4}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer5}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer6}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer7}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer8}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>				
				<sshexec host="${computer9}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer10}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer11}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer12}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer13}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer14}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer15}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				<sshexec host="${computer16}" username="${username}" password="${pw}" trust="true" command="pkill -u ${username}"/>
				
			</parallel>
	</target>
	
	
  <target name="space" depends="dist" description="Start a space" >
  	<java classname="system.SpaceImpl" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <classpath>
  	    <pathelement location="dist/system.jar"/>
  	  	<pathelement location="dist/client.jar"/>
  	  </classpath>
  	</java>
  </target>  
  
  <target name="fib" depends="dist" description="Start a fib task" >
  	<java classname="client.FibClient" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${host}"/>
  	  <classpath>
  	     <pathelement location="dist/system.jar"/>
  	    <pathelement location="dist/client.jar"/>
  	  </classpath>
  	</java>
  </target>
	
	 <target name="fibStandalone" depends="dist" description="Start a fib task in one JVM" >
	  	<java classname="client.FibClientImplStandalone" fork="true">
	  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
	  	  <jvmarg value="-Djava.security.policy=policy"/>
	  	  <arg value="${host}"/>
	  	  <classpath>
	  	    <pathelement location="dist/client.jar"/>
	  	    <pathelement location="dist/system.jar"/>
	  	  </classpath>
	  	</java>
	  </target>
	
	
  <target name="tsp" depends="dist" description="Run a TSP client" >
  	<java classname="client.TspClient" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${host}"/>
  	  <classpath>
  	    <pathelement location="dist/client.jar"/>
  	  <pathelement location="dist/system.jar"/>
  	  </classpath>
  	</java>
  </target>

  <target name="tspStandalone" depends="dist" description="Run a TSP client" >
	  	<java classname="client.TspClientStandalone" fork="true">
	  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
	  	  <jvmarg value="-Djava.security.policy=policy"/>
	  	  <arg value="${host}"/>
	  	  <classpath>
	  	    <pathelement location="dist/client.jar"/>
	  	    <pathelement location="dist/system.jar"/>
	  	  </classpath>
	  	</java>
	  </target>
	
   
  <target name="mandelbrot" depends="dist" description="Start a mandelbrot task" >
  	<java classname="client.MandelbrotClient" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${host}"/>
  	  <classpath>
  	    <pathelement location="dist/client.jar"/>
  	   	<pathelement location="dist/system.jar"/>
  	    </classpath>
  	</java>
  </target>
  
  <target name="clean" description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  
</project>

